{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  const logNames = [\"oak_log\", \"birch_log\", \"spruce_log\", \"jungle_log\", \"acacia_log\", \"dark_oak_log\", \"mangrove_log\"];\n  const logBlock = bot.findBlock({\n    matching: block => logNames.includes(block.name),\n    maxDistance: 32\n  });\n  if (!logBlock) {\n    bot.chat(\"No wood log found nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundLog = bot.findBlock({\n        matching: block => logNames.includes(block.name),\n        maxDistance: 32\n      });\n      return foundLog;\n    });\n  }\n  await mineBlock(bot, logBlock.name, 1);\n  bot.chat(\"Wood log mined.\");\n}", "description": "async function mineWoodLog(bot) {\n    // The function is about mining a single wood log. It searches for a nearby wood log and if it doesn't find one, it explores the environment until it finds one. Once a wood log is found, it mines it and sends a chat message indicating that the wood log has been mined.\n}"}, "mineSpruceLogs": {"code": "async function mineSpruceLogs(bot) {\n  const spruceLogName = \"spruce_log\";\n  const spruceLogCount = 3;\n  const spruceLogBlock = bot.findBlock({\n    matching: block => block.name === spruceLogName,\n    maxDistance: 32\n  });\n  if (!spruceLogBlock) {\n    bot.chat(\"No spruce log found nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundLog = bot.findBlock({\n        matching: block => block.name === spruceLogName,\n        maxDistance: 32\n      });\n      return foundLog;\n    });\n  }\n  await mineBlock(bot, spruceLogName, spruceLogCount);\n  bot.chat(\"Spruce logs mined.\");\n}", "description": "async function mineSpruceLogs(bot) {\n    // The function is about mining 3 spruce logs. It first searches for a nearby spruce log block, and if none are found, it explores the environment until it finds one. Once a spruce log block is found, it mines a total of 3 spruce logs using the `mineBlock` function. Finally, it sends a chat message indicating that the spruce logs have been mined.\n}"}, "craftCraftingTable": {"code": "async function craftCraftingTable(bot) {\n  const spruceLogCount = bot.inventory.count(mcData.itemsByName.spruce_log.id);\n  if (spruceLogCount >= 1) {\n    // Craft 4 spruce planks from 1 spruce log\n    await craftItem(bot, \"spruce_planks\", 1);\n    bot.chat(\"Spruce planks crafted.\");\n\n    // Craft a crafting table using the 4 spruce planks\n    await craftItem(bot, \"crafting_table\", 1);\n    bot.chat(\"Crafting table crafted.\");\n  } else {\n    bot.chat(\"Not enough spruce logs to craft a crafting table.\");\n  }\n}", "description": "async function craftCraftingTable(bot) {\n    // The function crafts a crafting table using spruce logs and spruce planks. It first checks if there is at least one spruce log in the inventory. If there is, it crafts 4 spruce planks from 1 spruce log, and then crafts a crafting table using the 4 spruce planks. If there are not enough spruce logs, it sends a message saying so.\n}"}, "craftWoodenPickaxe": {"code": "async function craftWoodenPickaxe(bot) {\n  const spruceLogCount = bot.inventory.count(mcData.itemsByName.spruce_log.id);\n  if (spruceLogCount >= 1) {\n    // Craft 4 wooden planks from 1 spruce log\n    await craftItem(bot, \"spruce_planks\", 1);\n    bot.chat(\"Spruce planks crafted.\");\n\n    // Craft 4 sticks from 2 wooden planks\n    await craftItem(bot, \"stick\", 1);\n    bot.chat(\"Sticks crafted.\");\n\n    // Check if there is a crafting table in the inventory\n    const craftingTableCount = bot.inventory.count(mcData.itemsByName.crafting_table.id);\n    if (craftingTableCount === 0) {\n      // Craft a crafting table using 4 wooden planks\n      await craftItem(bot, \"crafting_table\", 1);\n      bot.chat(\"Crafting table crafted.\");\n    }\n\n    // Find a suitable position to place the crafting table\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n\n    // Place the crafting table at the found position\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n    bot.chat(\"Crafting table placed.\");\n\n    // Craft a wooden pickaxe using 3 wooden planks and 2 sticks\n    await craftItem(bot, \"wooden_pickaxe\", 1);\n    bot.chat(\"Wooden pickaxe crafted.\");\n  } else {\n    bot.chat(\"Not enough spruce logs to craft a wooden pickaxe.\");\n  }\n}", "description": "async function craftWoodenPickaxe(bot) {\n    // The function crafts a wooden pickaxe using spruce logs, wooden planks, and sticks. It first checks if there is at least one spruce log in the inventory. If so, it crafts wooden planks and sticks from the spruce log, and checks if there is a crafting table in the inventory. If not, it crafts a crafting table using wooden planks. It then finds a suitable position to place the crafting table and places it. Finally, it crafts a wooden pickaxe using the crafted items and places it in the inventory.\n}"}, "mineIronOre": {"code": "async function mineIronOre(bot) {\n  // Check if the bot has enough cobblestone to craft a stone pickaxe\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  if (cobblestoneCount < 3) {\n    // Mine 3 cobblestone using the wooden pickaxe\n    await mineBlock(bot, \"stone\", 3);\n    bot.chat(\"Cobblestone mined.\");\n  }\n\n  // Place the crafting table\n  const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  bot.chat(\"Crafting table placed.\");\n\n  // Craft a stone pickaxe using the cobblestone and sticks\n  await craftItem(bot, \"stone_pickaxe\", 1);\n  bot.chat(\"Stone pickaxe crafted.\");\n\n  // Find and mine 1 iron ore using the stone pickaxe\n  const ironOreBlock = bot.findBlock({\n    matching: mcData.blocksByName.iron_ore.id,\n    maxDistance: 32\n  });\n  if (!ironOreBlock) {\n    bot.chat(\"No iron ore found nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundIronOre = bot.findBlock({\n        matching: mcData.blocksByName.iron_ore.id,\n        maxDistance: 32\n      });\n      return foundIronOre;\n    });\n  }\n  await mineBlock(bot, \"iron_ore\", 1);\n  bot.chat(\"Iron ore mined.\");\n}", "description": "async function mineIronOre(bot) {\n    // The function is about mining 1 iron ore using a stone pickaxe. First, check if the bot has enough cobblestone to craft a stone pickaxe. If not, mine 3 cobblestone using the wooden pickaxe. Then, place a crafting table and craft a stone pickaxe using the cobblestone and sticks. Next, find and mine 1 iron ore using the stone pickaxe. If no iron ore is found nearby, explore until finding one.\n}"}, "craftFurnace": {"code": "async function craftFurnace(bot) {\n  // Check if the bot has enough cobblestone to craft a furnace\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  if (cobblestoneCount < 8) {\n    // Mine cobblestone using the stone pickaxe\n    await mineBlock(bot, \"stone\", 8 - cobblestoneCount);\n    bot.chat(\"Cobblestone mined.\");\n  }\n\n  // Place the crafting table if it's not already placed\n  const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n  const craftingTableBlock = bot.blockAt(craftingTablePosition);\n  if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n    bot.chat(\"Crafting table placed.\");\n  }\n\n  // Craft a furnace using the cobblestones\n  await craftItem(bot, \"furnace\", 1);\n  bot.chat(\"Furnace crafted.\");\n}", "description": "async function craftFurnace(bot) {\n    // The function is about crafting a furnace. It checks if the bot has enough cobblestone to craft a furnace, and if not, it mines cobblestone using a stone pickaxe. Then, it places a crafting table if it's not already placed. Finally, it crafts a furnace using the cobblestones and saves the event of crafting a furnace.\n}"}, "placeFurnace": {"code": "async function placeFurnace(bot) {\n  // Check if the bot has a furnace in its inventory\n  const furnaceCount = bot.inventory.count(mcData.itemsByName.furnace.id);\n  if (furnaceCount > 0) {\n    // Find a suitable position to place the furnace\n    const furnacePosition = bot.entity.position.offset(1, -1, 1);\n\n    // Place the furnace at the found position\n    await placeItem(bot, \"furnace\", furnacePosition);\n    bot.chat(\"Furnace placed.\");\n  } else {\n    bot.chat(\"No furnace in inventory.\");\n  }\n}", "description": "async function placeFurnace(bot) {\n    // The function checks if the bot has a furnace in its inventory, and if so, finds a suitable position to place it. Once a position is found, the furnace is placed at that position and a success message is sent. If the bot does not have a furnace in its inventory, a failure message is sent.\n}"}, "smeltRawIron": {"code": "async function smeltRawIron(bot) {\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, -1, 1);\n\n  // Place the furnace at the found position\n  await placeItem(bot, \"furnace\", furnacePosition);\n  bot.chat(\"Furnace placed.\");\n\n  // Mine 1 coal_ore as fuel\n  await mineBlock(bot, \"coal_ore\", 1);\n  bot.chat(\"Coal mined.\");\n\n  // Smelt the raw iron using the furnace and the mined coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 1);\n  bot.chat(\"Raw iron smelted.\");\n}", "description": "async function smeltRawIron(bot) {\n    // The function is about smelting raw iron using a furnace and coal as fuel. First, it finds a suitable position to place the furnace and places it there. Then, it mines 1 coal_ore as fuel and smelts the raw iron using the furnace and the mined coal as fuel. Finally, it sends a chat message indicating that the raw iron has been smelted.\n}"}, "mineThreeCoalOres": {"code": "async function mineThreeCoalOres(bot) {\n  // Check if there are 3 coal ores nearby\n  const coalOres = bot.findBlocks({\n    matching: mcData.blocksByName.coal_ore.id,\n    maxDistance: 32,\n    count: 3\n  });\n\n  // If not, explore until 3 coal ores are found\n  if (coalOres.length < 3) {\n    bot.chat(\"Not enough coal ores nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundCoalOres = bot.findBlocks({\n        matching: mcData.blocksByName.coal_ore.id,\n        maxDistance: 32,\n        count: 3\n      });\n      return foundCoalOres.length >= 3 ? foundCoalOres : null;\n    });\n  }\n\n  // Mine the 3 coal ores using the stone pickaxe\n  await mineBlock(bot, \"coal_ore\", 3);\n  bot.chat(\"3 coal ores mined.\");\n}", "description": "async function mineThreeCoalOres(bot) {\n    // The function is about mining 3 coal ores using a stone pickaxe. It checks if there are 3 coal ores nearby, and if not, it explores the environment until 3 coal ores are found. Once 3 coal ores are found, it mines them using the stone pickaxe.\n}"}, "craftIronPickaxe": {"code": "async function craftIronPickaxe(bot) {\n  const ironIngotCount = bot.inventory.count(mcData.itemsByName.iron_ingot.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  const sprucePlankCount = bot.inventory.count(mcData.itemsByName.spruce_planks.id);\n  if (ironIngotCount >= 3) {\n    if (stickCount < 2) {\n      if (sprucePlankCount < 2) {\n        // Craft spruce planks from spruce logs\n        await craftItem(bot, \"spruce_planks\", 1);\n        bot.chat(\"Spruce planks crafted.\");\n      }\n\n      // Craft sticks using spruce planks\n      await craftItem(bot, \"stick\", 1);\n      bot.chat(\"Sticks crafted.\");\n    }\n\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the iron pickaxe using the iron ingots and sticks\n    await craftItem(bot, \"iron_pickaxe\", 1);\n    bot.chat(\"Iron pickaxe crafted.\");\n  } else {\n    bot.chat(\"Not enough iron ingots to craft an iron pickaxe.\");\n  }\n}", "description": "async function craftIronPickaxe(bot) {\n    // The function crafts an iron pickaxe using 3 iron ingots and 2 sticks. If the required items are not in the inventory, it crafts them. If a crafting table is not already placed, it places one. Finally, it crafts the iron pickaxe and sends a chat message.\n}"}, "smeltFiveIronOres": {"code": "async function smeltFiveIronOres(bot) {\n  // Check if the bot has a furnace in its inventory\n  const furnaceItem = bot.inventory.findInventoryItem(mcData.itemsByName.furnace.id);\n  if (!furnaceItem) {\n    // Craft a furnace if not found in the inventory\n    await craftFurnace(bot);\n  }\n\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, -1, 1);\n\n  // Place the furnace at the found position\n  await placeItem(bot, \"furnace\", furnacePosition);\n  bot.chat(\"Furnace placed.\");\n\n  // Check if the bot has coal in its inventory\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 5) {\n    // Mine enough coal to smelt 5 iron ores\n    await mineBlock(bot, \"coal_ore\", 5 - coalCount);\n    bot.chat(\"Coal mined.\");\n  }\n\n  // Smelt the 5 raw iron ores into iron ingots using the furnace and coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 5);\n  bot.chat(\"5 raw iron ores smelted into iron ingots.\");\n}", "description": "async function smeltFiveIronOres(bot) {\n    // The function is about smelting 5 raw iron ores into iron ingots using a furnace and coal as fuel. It first checks if the bot has a furnace in its inventory, and crafts one if not. Then it finds a suitable position to place the furnace and places it there. If the bot doesn't have enough coal, it mines enough coal to smelt 5 iron ores. Finally, it smelts the 5 raw iron ores into iron ingots using the furnace and coal as fuel.\n}"}, "mineFiveIronOres": {"code": "async function mineFiveIronOres(bot) {\n  // Check if the bot has a stone pickaxe or better in its inventory\n  const stonePickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.stone_pickaxe.id);\n  const ironPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.iron_pickaxe.id);\n\n  // If not, craft a stone pickaxe using the cobblestone and sticks in the inventory\n  if (!stonePickaxe && !ironPickaxe) {\n    await craftItem(bot, \"stone_pickaxe\", 1);\n    bot.chat(\"Stone pickaxe crafted.\");\n  }\n\n  // Find 5 iron ore blocks nearby\n  const ironOres = bot.findBlocks({\n    matching: mcData.blocksByName.iron_ore.id,\n    maxDistance: 32,\n    count: 5\n  });\n\n  // If not enough iron ore blocks are found nearby, explore until 5 iron ore blocks are found\n  if (ironOres.length < 5) {\n    bot.chat(\"Not enough iron ores nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundIronOres = bot.findBlocks({\n        matching: mcData.blocksByName.iron_ore.id,\n        maxDistance: 32,\n        count: 5\n      });\n      return foundIronOres.length >= 5 ? foundIronOres : null;\n    });\n  }\n\n  // Mine the 5 iron ore blocks using the stone pickaxe or better\n  await mineBlock(bot, \"iron_ore\", 5);\n  bot.chat(\"5 iron ores mined.\");\n}", "description": "async function mineFiveIronOres(bot) {\n    // The function is about mining 5 iron ore blocks using a stone pickaxe or better. First, check if the bot has a stone pickaxe or better in its inventory. If not, craft a stone pickaxe using the cobblestone and sticks in the inventory. Next, find 5 iron ore blocks nearby. If not enough iron ore blocks are found nearby, explore until 5 iron ore blocks are found. Finally, mine the 5 iron ore blocks using the stone pickaxe or better.\n}"}, "craftIronSword": {"code": "async function craftIronSword(bot) {\n  const ironIngotCount = bot.inventory.count(mcData.itemsByName.iron_ingot.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (ironIngotCount >= 2 && stickCount >= 1) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the iron sword using the iron ingots and stick\n    await craftItem(bot, \"iron_sword\", 1);\n    bot.chat(\"Iron sword crafted.\");\n  } else {\n    bot.chat(\"Not enough materials to craft an iron sword.\");\n  }\n}", "description": "async function craftIronSword(bot) {\n    // The function crafts an iron sword using 2 iron ingots and 1 stick if they are available in the inventory. If the crafting table is not already placed, it places one nearby. If the materials are not available, it sends a message indicating that there are not enough materials.\n}"}, "smeltFiveRawIron": {"code": "async function smeltFiveRawIron(bot) {\n  // Check if the bot has a furnace in its inventory\n  const furnaceItem = bot.inventory.findInventoryItem(mcData.itemsByName.furnace.id);\n  if (!furnaceItem) {\n    bot.chat(\"No furnace found in inventory.\");\n    return;\n  }\n\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, -1, 1);\n\n  // Place the furnace at the found position\n  await placeItem(bot, \"furnace\", furnacePosition);\n  bot.chat(\"Furnace placed.\");\n\n  // Check if the bot has enough coal in its inventory to smelt 5 raw iron\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 5) {\n    bot.chat(\"Not enough coal to smelt 5 raw iron.\");\n    return;\n  }\n\n  // Smelt the 5 raw iron using the furnace and the available coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 5);\n  bot.chat(\"5 raw iron smelted.\");\n}", "description": "async function smeltFiveRawIron(bot) {\n    // The function is about smelting 5 raw iron using a furnace and coal as fuel. First, it checks if the bot has a furnace in its inventory. If not, it returns. Then, it finds a suitable position to place the furnace and places it. Next, it checks if the bot has enough coal in its inventory to smelt 5 raw iron. If not, it returns. Finally, it smelts the 5 raw iron using the furnace and the available coal as fuel.\n}"}, "craftIronChestplate": {"code": "async function craftIronChestplate(bot) {\n  const ironIngotCount = bot.inventory.count(mcData.itemsByName.iron_ingot.id);\n  if (ironIngotCount >= 8) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the iron chestplate using the iron ingots\n    await craftItem(bot, \"iron_chestplate\", 1);\n    bot.chat(\"Iron chestplate crafted.\");\n  } else {\n    bot.chat(\"Not enough iron ingots to craft an iron chestplate.\");\n  }\n}", "description": "async function craftIronChestplate(bot) {\n    // The function crafts an iron chestplate using 8 iron ingots. It first checks if there are enough iron ingots in the inventory. If there are, it places a crafting table nearby if it's not already placed, and then crafts the iron chestplate. If there are not enough iron ingots, it sends a message saying so.\n}"}, "equipIronChestplate": {"code": "async function equipIronChestplate(bot) {\n  // Check if the bot has an iron chestplate in its inventory\n  const ironChestplate = bot.inventory.findInventoryItem(mcData.itemsByName.iron_chestplate.id);\n\n  // If the iron chestplate is found, equip it in the \"torso\" slot\n  if (ironChestplate) {\n    await bot.equip(ironChestplate, \"torso\");\n    bot.chat(\"Iron chestplate equipped.\");\n  } else {\n    bot.chat(\"No iron chestplate found in the inventory.\");\n  }\n}", "description": "async function equipIronChestplate(bot) {\n    // The function is about equipping an iron chestplate in the \"torso\" slot of the bot's armor. It checks if the bot has an iron chestplate in its inventory and equips it if it exists. If the iron chestplate is not found, it sends a message saying that it is not available in the inventory.\n}"}, "mineFiveCoalOres": {"code": "async function mineFiveCoalOres(bot) {\n  // Check if there are 5 coal ores nearby\n  const coalOres = bot.findBlocks({\n    matching: mcData.blocksByName.coal_ore.id,\n    maxDistance: 32,\n    count: 5\n  });\n\n  // If not, explore until 5 coal ores are found\n  if (coalOres.length < 5) {\n    bot.chat(\"Not enough coal ores nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundCoalOres = bot.findBlocks({\n        matching: mcData.blocksByName.coal_ore.id,\n        maxDistance: 32,\n        count: 5\n      });\n      return foundCoalOres.length >= 5 ? foundCoalOres : null;\n    });\n  }\n\n  // Mine the 5 coal ores using the iron_pickaxe\n  await mineBlock(bot, \"coal_ore\", 5);\n  bot.chat(\"5 coal ores mined.\");\n}", "description": "async function mineFiveCoalOres(bot) {\n    // The function is about mining 5 coal ores using an iron pickaxe. It first checks if there are 5 coal ores nearby. If not, it explores the environment until 5 coal ores are found. Once 5 coal ores are found, it mines them using the iron pickaxe and saves the event of mining 5 coal ores.\n}"}, "mineEmeraldOre": {"code": "async function mineEmeraldOre(bot) {\n  // Equip the iron pickaxe\n  const ironPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.iron_pickaxe.id);\n  await bot.equip(ironPickaxe, \"hand\");\n  bot.chat(\"Iron pickaxe equipped.\");\n\n  // Explore until an emerald ore is found\n  const emeraldOre = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const foundEmeraldOre = bot.findBlock({\n      matching: mcData.blocksByName.emerald_ore.id,\n      maxDistance: 32\n    });\n    return foundEmeraldOre;\n  });\n  if (emeraldOre) {\n    // Mine the emerald ore\n    await mineBlock(bot, \"emerald_ore\", 1);\n    bot.chat(\"Emerald ore mined.\");\n  } else {\n    bot.chat(\"Emerald ore not found within exploration time.\");\n  }\n}", "description": "async function mineEmeraldOre(bot) {\n    // The function is about mining a single emerald ore block using an iron pickaxe. First, the function equips the iron pickaxe. Next, it explores the environment until finding an emerald ore block. Once an emerald ore block is found, it mines the block and saves the event of mining the emerald ore. If the emerald ore block is not found within the exploration time, it sends a message indicating that the emerald ore was not found.\n}"}, "mineThreeEmeraldOres": {"code": "async function mineThreeEmeraldOres(bot) {\n  // Equip the iron pickaxe\n  const ironPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.iron_pickaxe.id);\n  await bot.equip(ironPickaxe, \"hand\");\n  bot.chat(\"Iron pickaxe equipped.\");\n\n  // Initialize emerald ores count\n  let emeraldOresMined = 0;\n\n  // Explore and mine emerald ores until 3 are mined\n  while (emeraldOresMined < 3) {\n    const emeraldOre = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundEmeraldOre = bot.findBlock({\n        matching: mcData.blocksByName.emerald_ore.id,\n        maxDistance: 32\n      });\n      return foundEmeraldOre;\n    });\n    if (emeraldOre) {\n      // Mine the emerald ore\n      await mineBlock(bot, \"emerald_ore\", 1);\n      emeraldOresMined++;\n      bot.chat(`Emerald ore mined. Total: ${emeraldOresMined}/3`);\n    } else {\n      bot.chat(\"Emerald ore not found within exploration time. Continuing search...\");\n    }\n  }\n}", "description": "async function mineThreeEmeraldOres(bot) {\n    // The function is about mining three emerald ores using an iron pickaxe. First, equip the iron pickaxe in the hand. Then, explore the environment until finding an emerald ore block. Once an emerald ore block is found, mine it and repeat until three emerald ores are mined. The function keeps track of the number of emerald ores mined and outputs the progress in the chat.\n}"}, "craftShieldWithIron": {"code": "async function craftShieldWithIron(bot) {\n  // Check if we have enough spruce planks\n  const sprucePlankCount = bot.inventory.count(mcData.itemsByName.spruce_planks.id);\n  if (sprucePlankCount < 6) {\n    // Mine 3 more spruce planks\n    await mineBlock(bot, \"spruce_log\", 3);\n    // Craft spruce planks from spruce logs\n    await craftItem(bot, \"spruce_planks\", 3);\n    bot.chat(\"Spruce planks crafted.\");\n  }\n\n  // Check if we have enough iron ingots\n  const ironIngotCount = bot.inventory.count(mcData.itemsByName.iron_ingot.id);\n  if (ironIngotCount < 1) {\n    // Mine iron ore\n    await mineBlock(bot, \"iron_ore\", 1);\n    bot.chat(\"Iron ore mined.\");\n\n    // Place a furnace if it's not already placed\n    const furnacePosition = bot.entity.position.offset(1, -1, 0);\n    const furnaceBlock = bot.blockAt(furnacePosition);\n    if (!furnaceBlock || furnaceBlock.name !== \"furnace\") {\n      await placeItem(bot, \"furnace\", furnacePosition);\n      bot.chat(\"Furnace placed.\");\n    }\n\n    // Smelt iron ore into iron ingot using a furnace\n    await smeltItem(bot, \"raw_iron\", \"coal\", 1);\n    bot.chat(\"Iron ingot smelted.\");\n  }\n\n  // Place the crafting table if it's not already placed\n  const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n  const craftingTableBlock = bot.blockAt(craftingTablePosition);\n  if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n    bot.chat(\"Crafting table placed.\");\n  }\n\n  // Craft the shield using the 6 spruce planks and 1 iron ingot\n  await craftItem(bot, \"shield\", 1);\n  bot.chat(\"Shield crafted.\");\n}", "description": "async function craftShieldWithIron(bot) {\n    // The function crafts a shield using 6 spruce planks and 1 iron ingot. It checks if there are enough spruce planks and iron ingots in the inventory, and if not, it mines and smelts the required materials. It also places a furnace and a crafting table if they are not already placed. Finally, it crafts the shield and logs a message in the chat.\n}"}, "craftStoneSword": {"code": "async function craftStoneSword(bot) {\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (cobblestoneCount >= 2 && stickCount >= 1) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the stone sword using the cobblestone and stick\n    await craftItem(bot, \"stone_sword\", 1);\n    bot.chat(\"Stone sword crafted.\");\n  } else {\n    if (stickCount < 1) {\n      // Craft sticks using spruce planks\n      await craftItem(bot, \"stick\", 1);\n      bot.chat(\"Sticks crafted.\");\n    }\n    bot.chat(\"Not enough materials to craft a stone sword.\");\n  }\n}", "description": "async function craftStoneSword(bot) {\n    // The function crafts a stone sword using cobblestone and sticks. It checks if there are enough materials to craft the sword, and if not, it crafts the missing materials. If a crafting table is not already placed, it places one. Finally, it crafts the stone sword and sends a chat message.\n}"}, "craftStonePickaxe": {"code": "async function craftStonePickaxe(bot) {\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (cobblestoneCount >= 3 && stickCount >= 2) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Find the stone pickaxe recipe\n    const stonePickaxeRecipe = bot.recipesFor(mcData.itemsByName.stone_pickaxe.id, null, 1, craftingTableBlock)[0];\n\n    // Craft the stone pickaxe using the found recipe and the crafting table\n    await bot.craft(stonePickaxeRecipe, 1, craftingTableBlock);\n    bot.chat(\"Stone pickaxe crafted.\");\n  } else {\n    bot.chat(\"Not enough materials to craft a stone pickaxe.\");\n  }\n}", "description": "async function craftStonePickaxe(bot) {\n    // The function crafts a stone pickaxe using 3 cobblestones and 2 sticks. If the required materials are available in the inventory, the function places a crafting table if it's not already placed. Then, it finds the recipe for the stone pickaxe and crafts it using the crafting table. If the materials are not available, the function sends a message indicating that there are not enough materials to craft a stone pickaxe.\n}"}, "craftStoneAxeWithCraftingTable": {"code": "async function craftStoneAxeWithCraftingTable(bot) {\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (cobblestoneCount >= 3 && stickCount >= 2) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the stone axe using the cobblestones and sticks on the crafting table\n    await craftItem(bot, \"stone_axe\", 1);\n    bot.chat(\"Stone axe crafted.\");\n  } else {\n    if (stickCount < 2) {\n      // Craft sticks using spruce planks\n      await craftItem(bot, \"stick\", 1);\n      bot.chat(\"Sticks crafted.\");\n    }\n    bot.chat(\"Not enough materials to craft a stone axe.\");\n  }\n}", "description": "async function craftStoneAxeWithCraftingTable(bot) {\n    // The function crafts a stone axe using a crafting table. It checks if there are enough cobblestones and sticks in the inventory to craft the axe. If there are enough materials, it places a crafting table if it's not already placed and crafts the stone axe. If there are not enough sticks, it crafts sticks using spruce planks. If there are not enough materials to craft a stone axe, it sends a chat message.\n}"}, "craftStoneShovel": {"code": "async function craftStoneShovel(bot) {\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (cobblestoneCount >= 1 && stickCount >= 2) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the stone shovel using the cobblestone and sticks on the crafting table\n    await craftItem(bot, \"stone_shovel\", 1);\n    bot.chat(\"Stone shovel crafted.\");\n  } else {\n    bot.chat(\"Not enough materials to craft a stone shovel.\");\n  }\n}", "description": "async function craftStoneShovel(bot) {\n    // The function crafts a stone shovel using cobblestone and sticks. It checks if there are enough materials in the inventory to craft the stone shovel. If there are enough materials, it places a crafting table if it's not already placed and crafts the stone shovel using the cobblestone and sticks on the crafting table. If there are not enough materials, it sends a message to the chat saying so.\n}"}, "mineGoldOreAndSmelt": {"code": "async function mineGoldOreAndSmelt(bot) {\n  // Check if the bot has an iron pickaxe or better in its inventory\n  const ironPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.iron_pickaxe.id);\n  const diamondPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.diamond_pickaxe.id);\n\n  // If not, craft an iron pickaxe\n  if (!ironPickaxe && !diamondPickaxe) {\n    await craftItem(bot, \"iron_pickaxe\", 1);\n    bot.chat(\"Iron pickaxe crafted.\");\n  }\n\n  // Explore in a random direction until a gold ore is found\n  const randomDirection = new Vec3(Math.random() > 0.5 ? 1 : -1, 0, Math.random() > 0.5 ? 1 : -1);\n  const goldOre = await exploreUntil(bot, randomDirection, 300, () => {\n    const foundGoldOre = bot.findBlock({\n      matching: mcData.blocksByName.gold_ore.id,\n      maxDistance: 32\n    });\n    return foundGoldOre;\n  });\n  if (goldOre) {\n    // Mine the gold ore\n    await mineBlock(bot, \"gold_ore\", 1);\n    bot.chat(\"Gold ore mined.\");\n\n    // Place the furnace if not already placed\n    const furnaceBlock = bot.findBlock({\n      matching: mcData.blocksByName.furnace.id,\n      maxDistance: 32\n    });\n    if (!furnaceBlock) {\n      const furnacePosition = bot.entity.position.offset(1, -1, 1);\n      await placeItem(bot, \"furnace\", furnacePosition);\n      bot.chat(\"Furnace placed.\");\n    }\n\n    // Smelt the gold ore in the furnace to obtain a gold ingot\n    await smeltItem(bot, \"gold_ore\", \"coal\", 1);\n    bot.chat(\"Gold ore smelted into gold ingot.\");\n  } else {\n    bot.chat(\"Gold ore not found within exploration time.\");\n  }\n}", "description": "async function mineGoldOreAndSmelt(bot) {\n    // The function is about mining a single gold ore block and smelting it into a gold ingot using a furnace. First, it checks if the bot has an iron or diamond pickaxe in its inventory, and if not, it crafts an iron pickaxe. Then, it explores in a random direction until it finds a gold ore block. Once found, it mines the gold ore block and places a furnace nearby if it doesn't exist. Finally, it smelts the gold ore block into a gold ingot using coal as fuel.\n}"}, "killTropicalFish": {"code": "async function killTropicalFish(bot) {\n  // Equip the iron sword\n  const ironSword = bot.inventory.findInventoryItem(mcData.itemsByName.iron_sword.id);\n  await bot.equip(ironSword, \"hand\");\n  bot.chat(\"Iron sword equipped.\");\n\n  // Find the nearest tropical fish\n  const tropicalFish = bot.nearestEntity(entity => {\n    return entity.name === \"tropical_fish\" && entity.position.distanceTo(bot.entity.position) < 32;\n  });\n\n  // Kill the tropical fish using the iron sword\n  if (tropicalFish) {\n    await killMob(bot, \"tropical_fish\", 300);\n    bot.chat(\"Tropical fish killed.\");\n  } else {\n    bot.chat(\"No tropical fish found nearby.\");\n  }\n}", "description": "async function killTropicalFish(bot) {\n    // The function is about equipping an iron sword and killing the nearest tropical fish within a 32 block radius. If a tropical fish is found, it is killed using the iron sword and a success message is sent. If no tropical fish is found, a message is sent indicating that there are no tropical fish nearby.\n}"}, "craftStoneHoe": {"code": "async function craftStoneHoe(bot) {\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (cobblestoneCount >= 2 && stickCount >= 2) {\n    // Place the crafting table if it's not already placed\n    const craftingTablePosition = bot.entity.position.offset(1, -1, 0);\n    const craftingTableBlock = bot.blockAt(craftingTablePosition);\n    if (!craftingTableBlock || craftingTableBlock.name !== \"crafting_table\") {\n      await placeItem(bot, \"crafting_table\", craftingTablePosition);\n      bot.chat(\"Crafting table placed.\");\n    }\n\n    // Craft the stone hoe using the cobblestone and sticks on the crafting table\n    await craftItem(bot, \"stone_hoe\", 1);\n    bot.chat(\"Stone hoe crafted.\");\n  } else {\n    if (stickCount < 2) {\n      // Craft sticks using spruce planks\n      await craftItem(bot, \"stick\", 1);\n      bot.chat(\"Sticks crafted.\");\n    }\n    if (cobblestoneCount < 2) {\n      // Mine 2 cobblestone\n      await mineBlock(bot, \"cobblestone\", 2);\n      bot.chat(\"Cobblestone mined.\");\n    }\n    // Retry crafting the stone hoe\n    await craftStoneHoe(bot);\n  }\n}", "description": "async function craftStoneHoe(bot) {\n    // The function crafts a stone hoe using cobblestone and sticks. It checks if there are enough cobblestone and sticks in the inventory. If not, it crafts them. If the crafting table is not placed, it places it. Then, it crafts the stone hoe on the crafting table. If the crafting fails due to lack of resources, it retries the crafting process.\n}"}, "mineThreeCopperOres": {"code": "async function mineThreeCopperOres(bot) {\n  // Check if there are 3 copper ores nearby\n  const copperOres = bot.findBlocks({\n    matching: mcData.blocksByName.copper_ore.id,\n    maxDistance: 32,\n    count: 3\n  });\n\n  // If not, explore until 3 copper ores are found\n  if (copperOres.length < 3) {\n    bot.chat(\"Not enough copper ores nearby. Exploring...\");\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundCopperOres = bot.findBlocks({\n        matching: mcData.blocksByName.copper_ore.id,\n        maxDistance: 32,\n        count: 3\n      });\n      return foundCopperOres.length >= 3 ? foundCopperOres : null;\n    });\n  }\n\n  // Mine the 3 copper ores using the stone_pickaxe or iron_pickaxe\n  await mineBlock(bot, \"copper_ore\", 3);\n  bot.chat(\"3 copper ores mined.\");\n}", "description": "async function mineThreeCopperOres(bot) {\n    // The function is about mining 3 copper ores using either a stone_pickaxe or an iron_pickaxe. It first checks if there are 3 copper ores nearby. If not, it explores the environment until 3 copper ores are found. Once 3 copper ores are found, it mines them and saves the event of mining 3 copper ores.\n}"}, "equipShield": {"code": "async function equipShield(bot) {\n  // Check if the bot has a shield in its inventory\n  const shield = bot.inventory.findInventoryItem(mcData.itemsByName.shield.id);\n\n  // If the shield is found, equip it in the \"off-hand\" slot\n  if (shield) {\n    await bot.equip(shield, \"off-hand\");\n    bot.chat(\"Shield equipped.\");\n  } else {\n    bot.chat(\"No shield found in the inventory.\");\n  }\n}", "description": "async function equipShield(bot) {\n    // The function is about equipping a shield in the \"off-hand\" slot if it is available in the bot's inventory. If the shield is found, it is equipped and a message is sent to the chat. If the shield is not found, a message is sent to the chat indicating that no shield was found in the inventory.\n}"}, "smeltTwelveRawCopper": {"code": "async function smeltTwelveRawCopper(bot) {\n  // Check if the bot has a furnace in its inventory\n  const furnaceItem = bot.inventory.findInventoryItem(mcData.itemsByName.furnace.id);\n  if (!furnaceItem) {\n    // Craft a furnace if not found in the inventory\n    await craftItem(bot, \"furnace\", 1);\n    bot.chat(\"Furnace crafted.\");\n  }\n\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, -1, 1);\n\n  // Place the furnace at the found position\n  await placeItem(bot, \"furnace\", furnacePosition);\n  bot.chat(\"Furnace placed.\");\n\n  // Check if the bot has enough coal in its inventory to smelt 12 raw copper\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 12) {\n    // Mine enough coal to smelt 12 raw copper\n    await mineBlock(bot, \"coal_ore\", 12 - coalCount);\n    bot.chat(\"Coal mined.\");\n  }\n\n  // Smelt the 12 raw copper using the furnace and the available coal as fuel\n  await smeltItem(bot, \"raw_copper\", \"coal\", 12);\n  bot.chat(\"12 raw copper smelted.\");\n}", "description": "async function smeltTwelveRawCopper(bot) {\n    // The function is about smelting 12 raw copper using a furnace and coal as fuel. It checks if the bot has a furnace in its inventory, and crafts one if not. Then, it finds a suitable position to place the furnace and places it there. Next, it checks if the bot has enough coal in its inventory to smelt 12 raw copper, and mines enough coal if not. Finally, it smelts the 12 raw copper using the furnace and the available coal as fuel.\n}"}}